https://practice.geeksforgeeks.org/problems/permutations-of-a-given-string2041/1?page=1&category[]=Recursion&sortBy=difficulty

#include <bits/stdc++.h>

// using namespace std;

vector<string> find_permutation(string S)
{
    if (S.size() == 0) {
        vector<string> ans;
        ans.push_back("");
        return ans;
    }

    vector<string> ans = find_permutation(S.substr(1));
    vector<string> finalans;

    for (int i = 0; i < ans.size(); i++) {
        for (int j = 0; j < ans[i].size() + 1; j++) {
            string working = ans[i];
            string final = "";
            int k = 0;
            while (k < j) {
                final += working[k];
                k++;
            }
            final += S[0];
            while (k < working.size()) {
                final += working[k];
                k++;
            }
            finalans.push_back(final);
        }
    }
    sort(finalans.begin(), finalans.end());
    set<string> st;
    for (int i = 0; i < finalans.size(); i++) {
        st.insert(finalans[i]);
    }
    vector<string> finalans2;
    for (auto it = st.begin(); it != st.end(); it++) {
        finalans2.push_back(*it);
    }
    return finalans2;
}
};
