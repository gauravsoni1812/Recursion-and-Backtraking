https://practice.geeksforgeeks.org/problems/generate-all-possible-parentheses/1?page=3&category[]=Recursion&sortBy=difficulty

#include<bits/stdc++.h>
 
void helper(string str, int len, int n, vector<string> &ans, int open, int close)
{
    if (len == 2 * n)
    {
        ans.push_back(str);
        return;
    }

    if (open < n)
    {
        string a = str + "(";
        helper(a, len + 1, n, ans, open + 1, close);
    }
    if (close < open)
    {
        string a = str + ")";
        helper(a, len + 1, n, ans, open, close + 1);
    }
}
public:
vector<string> AllParenthesis(int n)
{
    vector<string> ans;
    string s = "";
    helper("", 0, n, ans, 0, 0);
    return ans;
}
