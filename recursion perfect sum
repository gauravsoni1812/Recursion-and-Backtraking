https://practice.geeksforgeeks.org/problems/perfect-sum-problem5633/1 

     int mod=1000000007;
    int helper(int arr[], int n, int sum, vector<vector<int>> &DP)
    {
        // Your code goes here
       // if(sum==0) return 1;
        if(n==0){
            if(arr[n]==0&&sum==0) return 2;
            if(arr[n]==sum||sum==0 ) return 1;
            return 0;
        }
        if(DP[n][sum]!=-1) return DP[n][sum];
        int take=0,Ntake=0;
        if(arr[n]<=sum){
            take = helper(arr,n-1,sum-arr[n],DP);
        }
        Ntake = helper(arr,n-1,sum,DP);
        return DP[n][sum] = ((take%mod)+(Ntake%mod))%mod;
    }
    int perfectSum(int arr[], int n, int sum)
    {
        // Your code goes here
        vector<vector<int>> DP(n,vector<int>(sum+1,-1));
        return helper(arr,n-1,sum,DP);
    } 
